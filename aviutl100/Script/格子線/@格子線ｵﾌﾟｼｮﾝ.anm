@äiéqê¸
--track0:ì_ÇÃêî,1,10,1,1
--track1:X,-5000,5000,0
--track2:Y,-5000,5000,0
--track3:Z,-5000,5000,0
--dialog:Xé≤âÒì],RX_dia=0;Yé≤âÒì],RY_dia=0;Zé≤âÒì],RZ_dia=0;ç¿ïW,pos_o={0,0,0};

require("function_kousi_T")

option_i=option_i+1

local num=obj.track0
local X=obj.track1
local Y=obj.track2
local Z=obj.track3
local RX_o,RY_o,RZ_o=RX_dia,RY_dia,RZ_dia

obj.setanchor("pos_o", num,"xyz")

for i=1,#pos_o do
 if(i%3==1)then
  pos_o[i]=pos_o[i]+X
 elseif(i%3==2)then
  pos_o[i]=pos_o[i]+Y
 else
  pos_o[i]=pos_o[i]+Z 
 end
end

--âÒì]
pos_o=Rotate(pos_o,RX_o,RY_o,RZ_o)

local pos_num=#pos
local pos_o_num=#pos_o

for i=1,pos_o_num do
 pos[pos_num+i]=pos_o[i]
end

obj.setoption("billboard",3)

if(option_num==option_i)then
 pos=Rotate(pos,RX,RY,RZ)
 d_pos=pos
 draw_Point_Line(pos,d_pos,r,obj,col,size,colP,sizeP,L_B_K,RX,RY,RZ)
else
 obj.load("text"," ")--éÙï∂
end

@ê≥ëΩñ ëÃäiéqê¸
--track0:ÉTÉCÉY,0,1000,100
--track1:X,-5000,5000,0
--track2:Y,-5000,5000,0
--track3:Z,-5000,5000,0
--dialog:ÉÇÅ[Éh(1Å`5),mode_dia=1;Xé≤âÒì],RX_dia=0;Yé≤âÒì],RY_dia=0;Zé≤âÒì],RZ_dia=0;ç¿ïW,pos_oo={0,0,0};

require("function_kousi_T")

option_i=option_i+1

local mode_o=mode_dia
local tamen_size_o=obj.track0
local X=obj.track1
local Y=obj.track2
local Z=obj.track3
local pos_o={}
local RX_o,RY_o,RZ_o=RX_dia,RY_dia,RZ_dia

obj.setanchor("pos_oo", 1,"xyz")

local G=(1+math.sqrt(5))/2

if(mode_o==1)then
pos_o={-1,-1,-1,-1,1,1,1,-1,1,1,1,-1}
elseif(mode_o==2)then
pos_o={-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1}
elseif(mode_o==3)then
pos_o={-1,0,0,0,-1,0,0,0,-1,1,0,0,0,1,0,0,0,1}
elseif(mode_o==4)then
pos_o={0,-1,-G^2,0,1,-G^2,0,-1,G^2,0,1,G^2,-1,-G^2,0,1,-G^2,0,-1,G^2,0,1,G^2,0,-G^2,0,-1,-G^2,0,1,G^2,0,-1,G^2,0,1,-G,-G,-G,-G,-G,G,-G,G,-G,-G,G,G,G,-G,-G,G,-G,G,G,G,-G,G,G,G}
elseif(mode_o==5)then
pos_o={1,G,0, 1,-G,0, -1,G,0, -1,-G,0, 0,1,G, 0,1,-G, 0,-1,G, 0,-1,-G, G,0,1, G,0,-1, -G,0,1, -G,0,-1}
else
pos_o={0,0,0}
end

--ägëÂ
for i=1,#pos_o do
 pos_o[i]=pos_o[i]*tamen_size_o
end

--âÒì]
pos_o=Rotate(pos_o,RX_o,RY_o,RZ_o)

for i=1,#pos_o/3 do
 pos_o[3*i-2]=pos_o[3*i-2]+pos_oo[1]+X
 pos_o[3*i-1]=pos_o[3*i-1]+pos_oo[2]+Y
 pos_o[3*i]=pos_o[3*i]+pos_oo[3]+Z
end

local pos_num=#pos
local pos_o_num=#pos_o

for i=1,pos_o_num do
 pos[pos_num+i]=pos_o[i]
end

obj.setoption("billboard",3)

if(option_num==option_i)then
 pos=Rotate(pos,RX,RY,RZ)
 d_pos=pos
 draw_Point_Line(pos,d_pos,r,obj,col,size,colP,sizeP,L_B_K,RX,RY,RZ)
else
 obj.load("text"," ")--éÙï∂
end

@ê≥ëΩäpå`äiéqê¸
--track0:îºåa,0,1000,100
--track1:X,-5000,5000,0
--track2:Y,-5000,5000,0
--track3:Z,-5000,5000,0
--dialog:ì_ÇÃêî,ten_dia=10;Xé≤âÒì],RX_dia=0;Yé≤âÒì],RY_dia=0;Zé≤âÒì],RZ_dia=0;ç¿ïW,pos_oo={0,0,0};

require("function_kousi_T")

option_i=option_i+1

local num=ten_dia
local hankei=obj.track0
local X=obj.track1
local Y=obj.track2
local Z=obj.track3
local pos_o={}
local dsita=math.pi*2/(num)
local RX_o,RY_o,RZ_o=RX_dia,RY_dia,RZ_dia

obj.setanchor("pos_oo", 1,"xyz")

for i=1,num do
  pos_o[3*i-2]=pos_oo[1]+X+hankei*math.cos(i*dsita+math.pi/4)
  pos_o[3*i-1]=pos_oo[2]+Y+hankei*math.sin(i*dsita+math.pi/4)
  pos_o[3*i]=pos_oo[3]+Z
end

--âÒì]
pos_o=Rotate(pos_o,RX_o,RY_o,RZ_o)

local pos_num=#pos
local pos_o_num=#pos_o

for i=1,pos_o_num do
 pos[pos_num+i]=pos_o[i]
end

obj.setoption("billboard",3)

if(option_num==option_i)then
 pos=Rotate(pos,RX,RY,RZ)
 d_pos=pos
 draw_Point_Line(pos,d_pos,r,obj,col,size,colP,sizeP,L_B_K,RX,RY,RZ)
else
 obj.load("text"," ")--éÙï∂
end

@ê≥ï˚å`äiéqê¸
--track0:ï”ÇÃí∑Ç≥,0,1000,200
--track1:X,-5000,5000,0
--track2:Y,-5000,5000,0
--track3:Z,-5000,5000,0
--dialog:ÇPï”ÇÃì_ÇÃêî,ten_dia=3;Xé≤âÒì],RX_dia=0;Yé≤âÒì],RY_dia=0;Zé≤âÒì],RZ_dia=0;ç¿ïW,pos_oo={0,0,0};

require("function_kousi_T")

option_i=option_i+1

local num=ten_dia
local hen_ten=ten_dia
local hen=obj.track0
local X=obj.track1
local Y=obj.track2
local Z=obj.track3
local pos_o={}
local dx=hen/(num-1)
local dy=hen/(num-1)
local RX_o,RY_o,RZ_o=RX_dia,RY_dia,RZ_dia

obj.setanchor("pos_oo", 1,"xyz")

for j=0,num-1 do
 for i=1,num do
  pos_o[3*(i+num*j)-2]=pos_oo[1]+X+dx*(i-1)-hen/2
  pos_o[3*(i+num*j)-1]=pos_oo[2]+Y+dy*j-hen/2
  pos_o[3*(i+num*j)]=pos_oo[3]+Z
 end
end

--âÒì]
pos_o=Rotate(pos_o,RX_o,RY_o,RZ_o)

local pos_num=#pos
local pos_o_num=#pos_o

for i=1,pos_o_num do
 pos[pos_num+i]=pos_o[i]
end

obj.setoption("billboard",3)

if(option_num==option_i)then
 pos=Rotate(pos,RX,RY,RZ)
 d_pos=pos
 draw_Point_Line(pos,d_pos,r,obj,col,size,colP,sizeP,L_B_K,RX,RY,RZ)
else
 obj.load("text"," ")--éÙï∂
end

@îÚÇ—ïëÇ§äiéqê¸
--track0:ì_ÇÃêî,1,50,5,1
--track1:X,-5000,5000,0
--track2:Y,-5000,5000,0
--track3:Z,-5000,5000,0
--dialog:ì_ÇÃêî,ten_dia=10;îÕàÕ,hanni_dia=100;ë¨ìxåWêî%,v_dia=100;óêêîí≤êÆ,rand_dia=0;Xé≤âÒì],RX_dia=0;Yé≤âÒì],RY_dia=0;Zé≤âÒì],RZ_dia=0;ç¿ïW,pos_oo={0,0,0};

require("function_kousi_T")

option_i=option_i+1

local num_o=obj.track0
local X=obj.track1
local Y=obj.track2
local Z=obj.track3
local WX_o,WY_o,WZ_o=hanni_dia,hanni_dia,hanni_dia
local pos_o={}
local v_o=v_dia/100
local rand_seed_o=rand_dia
local RX_o,RY_o,RZ_o=RX_dia,RY_dia,RZ_dia

obj.setanchor("pos_oo", 1,"xyz")

for i=1,num_o do
  pos_o[3*i-2]=pos_oo[1]+X+obj.rand(-100,100,i+rand_seed_o,1)*WX_o*math.cos(obj.rand(0,math.pi,i+rand_seed_o,1)+obj.rand(-100,100,i+rand_seed_o,100)*v_o*obj.time/100)/100
  pos_o[3*i-1]=pos_oo[2]+Y+obj.rand(-100,100,i+rand_seed_o,2)*WY_o*math.cos(obj.rand(0,math.pi,i+rand_seed_o,2)+obj.rand(-100,100,i+rand_seed_o,200)*v_o*obj.time/100)/100
  pos_o[3*i]=pos_oo[3]+Z+obj.rand(-100,100,i+rand_seed_o,3)*WZ_o*math.cos(obj.rand(0,math.pi,i+rand_seed_o,3)+obj.rand(-100,100,i+rand_seed_o,300)*v_o*obj.time/100)/100
end

--âÒì]
pos_o=Rotate(pos_o,RX_o,RY_o,RZ_o)

local pos_num=#pos
local pos_o_num=#pos_o

for i=1,pos_o_num do
 pos[pos_num+i]=pos_o[i]
end

obj.setoption("billboard",3)

if(option_num==option_i)then
 pos=Rotate(pos,RX,RY,RZ)
 d_pos=pos
 draw_Point_Line(pos,d_pos,r,obj,col,size,colP,sizeP,L_B_K,RX,RY,RZ)
else
 obj.load("text"," ")--éÙï∂
end

@èdÇÀÇÈ
--track0:å¬êî,1,100,1,1
--track1:dX,-5000,5000,0
--track2:dY,-5000,5000,0
--track3:dZ,-5000,5000,0
--dialog:Xé≤Ç–ÇÀÇË(Åã),hineriX_dia=0;Yé≤Ç–ÇÀÇË(Åã),hineriY_dia=0;Zé≤Ç–ÇÀÇË(Åã),hineriZ_dia=0;

require("function_kousi_T")

option_i=option_i+1

local r_o=r
local num=obj.track0
local dX=obj.track1
local dY=obj.track2
local dZ=obj.track3
local hineriX=hineriX_dia
local hineriY=hineriY_dia
local hineriZ=hineriZ_dia
local pos_o={}

local pos_num=#pos

for j=0,num-2 do
 for i=1,pos_num/3 do
  pos[3*i-2],pos[3*i-1],pos[3*i]=Rot_z(pos[3*i-2],pos[3*i-1],pos[3*i],math.rad(hineriZ))
  pos[3*i-2],pos[3*i-1],pos[3*i]=Rot_y(pos[3*i-2],pos[3*i-1],pos[3*i],math.rad(hineriY))
  pos[3*i-2],pos[3*i-1],pos[3*i]=Rot_x(pos[3*i-2],pos[3*i-1],pos[3*i],math.rad(hineriX))
  pos_o[3*i-2+j*pos_num]=pos[3*i-2]+dX*(j+1)
  pos_o[3*i-1+j*pos_num]=pos[3*i-1]+dY*(j+1)
  pos_o[3*i+j*pos_num]=pos[3*i]+dZ*(j+1)
 end
end

local pos_num=#pos
local pos_o_num=#pos_o

for i=1,pos_o_num do
 pos[pos_num+i]=pos_o[i]
end

obj.setoption("billboard",3)

if(option_num==option_i)then
 pos=Rotate(pos,RX,RY,RZ)
 d_pos=pos
 draw_Point_Line(pos,d_pos,r,obj,col,size,colP,sizeP,L_B_K,RX,RY,RZ)
else
 obj.load("text"," ")--éÙï∂
end